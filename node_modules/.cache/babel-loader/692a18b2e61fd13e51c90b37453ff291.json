{"remainingRequest":"/Users/crocslut/Desktop/Git/vue-tailwindcss-etiqa-ncov-tracker/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/vue-tailwindcss-etiqa-ncov-tracker/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/vue-tailwindcss-etiqa-ncov-tracker/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/vue-tailwindcss-etiqa-ncov-tracker/src/components/BaseButton.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/crocslut/Desktop/Git/vue-tailwindcss-etiqa-ncov-tracker/src/components/BaseButton.vue","mtime":1614012065000},{"path":"/Users/crocslut/Desktop/Git/vue-tailwindcss-etiqa-ncov-tracker/node_modules/cache-loader/dist/cjs.js","mtime":1628223246722},{"path":"/Users/crocslut/Desktop/Git/vue-tailwindcss-etiqa-ncov-tracker/node_modules/babel-loader/lib/index.js","mtime":1627424129822},{"path":"/Users/crocslut/Desktop/Git/vue-tailwindcss-etiqa-ncov-tracker/node_modules/cache-loader/dist/cjs.js","mtime":1628223246722},{"path":"/Users/crocslut/Desktop/Git/vue-tailwindcss-etiqa-ncov-tracker/node_modules/vue-loader-v16/dist/index.js","mtime":1628223249048}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMvY3JvY3NsdXQvRGVza3RvcC9HaXQvdnVlLXRhaWx3aW5kY3NzLWV0aXFhLW5jb3YtdHJhY2tlci9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogImJhc2UtYnV0dG9uIiwKICBwcm9wczogewogICAgdGFnOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogImJ1dHRvbiIsCiAgICAgIGRlc2NyaXB0aW9uOiAiQnV0dG9uIHRhZyAoZGVmYXVsdCAtPiBidXR0b24pIgogICAgfSwKICAgIHR5cGU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAiZGVmYXVsdCIsCiAgICAgIGRlc2NyaXB0aW9uOiAiQnV0dG9uIHR5cGUgKGUsZyBwcmltYXJ5LCBkYW5nZXIgZXRjKSIKICAgIH0sCiAgICBzaXplOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogIiIsCiAgICAgIGRlc2NyaXB0aW9uOiAiQnV0dG9uIHNpemUgbGd8c20iCiAgICB9LAogICAgdGV4dENvbG9yOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogIiIsCiAgICAgIGRlc2NyaXB0aW9uOiAiQnV0dG9uIHRleHQgY29sb3IgKGUuZyBwcmltYXJ5LCBkYW5nZXIgZXRjKSIKICAgIH0sCiAgICBuYXRpdmVUeXBlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogImJ1dHRvbiIsCiAgICAgIGRlc2NyaXB0aW9uOiAiQnV0dG9uIG5hdGl2ZSB0eXBlIChlLmcgc3VibWl0LGJ1dHRvbiBldGMpIgogICAgfSwKICAgIGljb246IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAiIiwKICAgICAgZGVzY3JpcHRpb246ICJCdXR0b24gaWNvbiIKICAgIH0sCiAgICB0ZXh0OiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogIiIsCiAgICAgIGRlc2NyaXB0aW9uOiAiQnV0dG9uIHRleHQgaW4gY2FzZSBub3QgcHJvdmlkZWQgdmlhIGRlZmF1bHQgc2xvdCIKICAgIH0sCiAgICBvdXRsaW5lOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlLAogICAgICBkZXNjcmlwdGlvbjogIldoZXRoZXIgYnV0dG9uIHN0eWxlIGlzIG91dGxpbmUiCiAgICB9LAogICAgcm91bmRlZDogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZSwKICAgICAgZGVzY3JpcHRpb246ICJXaGV0aGVyIGJ1dHRvbiBzdHlsZSBpcyByb3VuZGVkIgogICAgfSwKICAgIGljb25Pbmx5OiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlLAogICAgICBkZXNjcmlwdGlvbjogIldoZXRoZXIgYnV0dG9uIGNvbnRhaW5zIG9ubHkgYW4gaWNvbiIKICAgIH0sCiAgICBibG9jazogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZSwKICAgICAgZGVzY3JpcHRpb246ICJXaGV0aGVyIGJ1dHRvbiBpcyBvZiBibG9jayB0eXBlIgogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGNsYXNzZXM6IGZ1bmN0aW9uIGNsYXNzZXMoKSB7CiAgICAgIHZhciBidG5DbGFzc2VzID0gW3sKICAgICAgICAiYnRuLWJsb2NrIjogdGhpcy5ibG9jawogICAgICB9LCB7CiAgICAgICAgInJvdW5kZWQtY2lyY2xlIjogdGhpcy5yb3VuZGVkCiAgICAgIH0sIHsKICAgICAgICAiYnRuLWljb24tb25seSI6IHRoaXMuaWNvbk9ubHkKICAgICAgfSwgX2RlZmluZVByb3BlcnR5KHt9LCAidGV4dC0iLmNvbmNhdCh0aGlzLnRleHRDb2xvciksIHRoaXMudGV4dENvbG9yKSwgewogICAgICAgICJidG4taWNvbiI6IHRoaXMuaWNvbiB8fCB0aGlzLiRzbG90cy5pY29uCiAgICAgIH0sIHRoaXMudHlwZSAmJiAhdGhpcy5vdXRsaW5lID8gImJ0bi0iLmNvbmNhdCh0aGlzLnR5cGUpIDogIiIsIHRoaXMub3V0bGluZSA/ICJidG4tb3V0bGluZS0iLmNvbmNhdCh0aGlzLnR5cGUpIDogIiJdOwoKICAgICAgaWYgKHRoaXMuc2l6ZSkgewogICAgICAgIGJ0bkNsYXNzZXMucHVzaCgiYnRuLSIuY29uY2F0KHRoaXMuc2l6ZSkpOwogICAgICB9CgogICAgICByZXR1cm4gYnRuQ2xhc3NlczsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGhhbmRsZUNsaWNrOiBmdW5jdGlvbiBoYW5kbGVDbGljayhldnQpIHsKICAgICAgdGhpcy4kZW1pdCgiY2xpY2siLCBldnQpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/Users/crocslut/Desktop/Git/vue-tailwindcss-etiqa-ncov-tracker/src/components/BaseButton.vue"],"names":[],"mappings":";AA6BA,eAAe;AACb,EAAA,IAAI,EAAE,aADO;AAEb,EAAA,KAAK,EAAE;AACL,IAAA,GAAG,EAAE;AACH,MAAA,IAAI,EAAE,MADH;AAEH,MAAA,OAAO,EAAE,QAFN;AAGH,MAAA,WAAW,EAAE;AAHV,KADA;AAML,IAAA,IAAI,EAAE;AACJ,MAAA,IAAI,EAAE,MADF;AAEJ,MAAA,OAAO,EAAE,SAFL;AAGJ,MAAA,WAAW,EAAE;AAHT,KAND;AAWL,IAAA,IAAI,EAAE;AACJ,MAAA,IAAI,EAAE,MADF;AAEJ,MAAA,OAAO,EAAE,EAFL;AAGJ,MAAA,WAAW,EAAE;AAHT,KAXD;AAgBL,IAAA,SAAS,EAAE;AACT,MAAA,IAAI,EAAE,MADG;AAET,MAAA,OAAO,EAAE,EAFA;AAGT,MAAA,WAAW,EAAE;AAHJ,KAhBN;AAqBL,IAAA,UAAU,EAAE;AACV,MAAA,IAAI,EAAE,MADI;AAEV,MAAA,OAAO,EAAE,QAFC;AAGV,MAAA,WAAW,EAAE;AAHH,KArBP;AA0BL,IAAA,IAAI,EAAE;AACJ,MAAA,IAAI,EAAE,MADF;AAEJ,MAAA,OAAO,EAAE,EAFL;AAGJ,MAAA,WAAW,EAAE;AAHT,KA1BD;AA+BL,IAAA,IAAI,EAAE;AACJ,MAAA,IAAI,EAAE,MADF;AAEJ,MAAA,OAAO,EAAE,EAFL;AAGJ,MAAA,WAAW,EAAE;AAHT,KA/BD;AAoCL,IAAA,OAAO,EAAE;AACP,MAAA,IAAI,EAAE,OADC;AAEP,MAAA,OAAO,EAAE,KAFF;AAGP,MAAA,WAAW,EAAE;AAHN,KApCJ;AAyCL,IAAA,OAAO,EAAE;AACP,MAAA,IAAI,EAAE,OADC;AAEP,MAAA,OAAO,EAAE,KAFF;AAGP,MAAA,WAAW,EAAE;AAHN,KAzCJ;AA8CL,IAAA,QAAQ,EAAE;AACR,MAAA,IAAI,EAAE,OADE;AAER,MAAA,OAAO,EAAE,KAFD;AAGR,MAAA,WAAW,EAAE;AAHL,KA9CL;AAmDL,IAAA,KAAK,EAAE;AACL,MAAA,IAAI,EAAE,OADD;AAEL,MAAA,OAAO,EAAE,KAFJ;AAGL,MAAA,WAAW,EAAE;AAHR;AAnDF,GAFM;AA2Db,EAAA,QAAQ,EAAE;AACR,IAAA,OADQ,qBACE;AACR,UAAI,UAAS,GAAI,CACf;AAAE,qBAAa,KAAK;AAApB,OADe,EAEf;AAAE,0BAAkB,KAAK;AAAzB,OAFe,EAGf;AAAE,yBAAiB,KAAK;AAAxB,OAHe,qCAIJ,KAAK,SAJD,GAIe,KAAK,SAJpB,GAKf;AAAE,oBAAY,KAAK,IAAL,IAAa,KAAK,MAAL,CAAY;AAAvC,OALe,EAMf,KAAK,IAAL,IAAa,CAAC,KAAK,OAAnB,iBAAoC,KAAK,IAAzC,IAAkD,EANnC,EAOf,KAAK,OAAL,yBAA8B,KAAK,IAAnC,IAA4C,EAP7B,CAAjB;;AASA,UAAI,KAAK,IAAT,EAAe;AACb,QAAA,UAAU,CAAC,IAAX,eAAuB,KAAK,IAA5B;AACF;;AACA,aAAO,UAAP;AACD;AAfO,GA3DG;AA4Eb,EAAA,OAAO,EAAE;AACP,IAAA,WADO,uBACK,GADL,EACU;AACf,WAAK,KAAL,CAAW,OAAX,EAAoB,GAApB;AACD;AAHM;AA5EI,CAAf","sourcesContent":["<template>\n  <component\n    :is=\"tag\"\n    :type=\"tag === 'button' ? nativeType : ''\"\n    @click=\"handleClick\"\n    class=\"btn\"\n    :class=\"classes\"\n  >\n    <span\n      class=\"btn-inner--icon\"\n      v-if=\"$slots.icon || (icon && $slots.default)\"\n    >\n      <slot name=\"icon\">\n        <i :class=\"icon\"></i>\n      </slot>\n    </span>\n    <i v-if=\"!$slots.default\" :class=\"icon\"></i>\n    <span\n      class=\"btn-inner--text\"\n      v-if=\"$slots.icon || (icon && $slots.default)\"\n    >\n      <slot>\n        {{ text }}\n      </slot>\n    </span>\n    <slot v-if=\"!$slots.icon && !icon\"></slot>\n  </component>\n</template>\n<script>\nexport default {\n  name: \"base-button\",\n  props: {\n    tag: {\n      type: String,\n      default: \"button\",\n      description: \"Button tag (default -> button)\",\n    },\n    type: {\n      type: String,\n      default: \"default\",\n      description: \"Button type (e,g primary, danger etc)\",\n    },\n    size: {\n      type: String,\n      default: \"\",\n      description: \"Button size lg|sm\",\n    },\n    textColor: {\n      type: String,\n      default: \"\",\n      description: \"Button text color (e.g primary, danger etc)\",\n    },\n    nativeType: {\n      type: String,\n      default: \"button\",\n      description: \"Button native type (e.g submit,button etc)\",\n    },\n    icon: {\n      type: String,\n      default: \"\",\n      description: \"Button icon\",\n    },\n    text: {\n      type: String,\n      default: \"\",\n      description: \"Button text in case not provided via default slot\",\n    },\n    outline: {\n      type: Boolean,\n      default: false,\n      description: \"Whether button style is outline\",\n    },\n    rounded: {\n      type: Boolean,\n      default: false,\n      description: \"Whether button style is rounded\",\n    },\n    iconOnly: {\n      type: Boolean,\n      default: false,\n      description: \"Whether button contains only an icon\",\n    },\n    block: {\n      type: Boolean,\n      default: false,\n      description: \"Whether button is of block type\",\n    },\n  },\n  computed: {\n    classes() {\n      let btnClasses = [\n        { \"btn-block\": this.block },\n        { \"rounded-circle\": this.rounded },\n        { \"btn-icon-only\": this.iconOnly },\n        { [`text-${this.textColor}`]: this.textColor },\n        { \"btn-icon\": this.icon || this.$slots.icon },\n        this.type && !this.outline ? `btn-${this.type}` : \"\",\n        this.outline ? `btn-outline-${this.type}` : \"\",\n      ];\n      if (this.size) {\n        btnClasses.push(`btn-${this.size}`);\n      }\n      return btnClasses;\n    },\n  },\n  methods: {\n    handleClick(evt) {\n      this.$emit(\"click\", evt);\n    },\n  },\n};\n</script>\n<style></style>\n"],"sourceRoot":""}]}